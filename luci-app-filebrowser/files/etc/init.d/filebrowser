#!/bin/sh /etc/rc.common
# Copyright (C) 2019 [CTCGFW] Project OpenWRT

USE_PROCD=1
START=90
STOP=10

_info() {
    logger -p daemon.info -t "FileBrowser" "$*"
}

_err() {
    logger -p daemon.err -t "FileBrowser" "$*"
}

init_config() {
    config_load filebrowser
    
    local root_dir
    local db_dir
    
    config_get root_dir config root_dir
    config_get db_dir config db_dir
    
    [ -d $root_dir ] || mkdir -p "${root_dir}"
    [ -d $db_dir ] || mkdir -p "${db_dir}"
}

start_service() {
    init_config
    local addr_type
    local db_dir
    local db_name
    local enabled
    local port
    local root_dir
    local username
    local password
    
    local addr
    local password_hashed
    
    config_get addr_type config addr_type
    config_get db_dir config db_dir
    config_get enabled config enabled
    config_get port config port
    config_get root_dir config root_dir
    config_get username config username
    config_get password config password
    config_get db_name config db_name
    
    [ "${db_dir}" == "/" ] || db_dir="${db_dir%*/}"
    
    # TIP: 使用luci启动时，filebrowser没法计算password hash
    password_hashed="$( /usr/bin/filebrowser_HashPwd ${password} )"
    # _info "password: ${password}"
    # _info "password_hashed: ${password_hashed}" # using cmd `logread -f` to check it
	# _info "database path: ${db_dir}/${db_name}"
    if [ "${addr_type}" == "local" ];then
        addr="127.0.0.1"
        elif [ "${addr_type}" == "lan" ];then
        addr="$(uci get network.lan.ipaddr)"
        elif [ "${addr_type}" == "wan" ];then
        addr="0.0.0.0"
    fi
    
    [ "$enabled" == "1" ] || { _info "Instance \"FileBrowser\" disabled."; return 1;}
    _info "Instance \"FileBrowser\" start."
    procd_open_instance
    procd_set_param command /usr/bin/filebrowser
    procd_append_param command -a ${addr}
    procd_append_param command -d ${db_dir}/${db_name}
    procd_append_param command -p ${port}
    procd_append_param command -r ${root_dir}
    procd_append_param command --username ${username}
    procd_append_param command --password ${password_hashed}
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param file /etc/config/filebrowser
    # procd_set_param respawn retry=60
    procd_close_instance
    
}
